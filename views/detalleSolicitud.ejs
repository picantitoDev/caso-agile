<!DOCTYPE html>
<html lang="es">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Detalle de Solicitud</title>
    <link rel="stylesheet" href="/detalleSolicitud.css" />
    <style>
      .archivo-preview {
        display: flex;
        align-items: center;
        margin-top: 5px;
        gap: 10px;
      }

      .archivo-preview span {
        flex: 1;
      }

      .btn-eliminar {
        background-color: #e57373;
        border: none;
        color: white;
        cursor: pointer;
        padding: 4px 8px;
        border-radius: 4px;
      }

      .btn-eliminar:hover {
        background-color: #d32f2f;
      }

      .archivos-nuevos {
        margin-top: 10px;
      }
    </style>
  </head>
  <body>
    <header>
      <h1>Detalle de Solicitud</h1>
      <div class="user-info">
        <span><%= user.username %> - <%= user.universidad %></span>
        <a href="/log-out" class="logout-btn">Cerrar sesión</a>
      </div>
    </header>

    <div class="container">
      <form
        action="/user/solicitudes/<%= solicitudId %>/guardar-cambios"
        method="POST"
        enctype="multipart/form-data"
        id="formulario"
      >
        <% secciones.forEach(seccion => { %>
        <div class="seccion">
          <h2>
            <%= seccion.nombre .split(' ') .map(p => p.charAt(0).toUpperCase() +
            p.slice(1)) .join(' ') %>
          </h2>

          <% const archivosSeccion = archivosPorSeccion.find(a =>
          a.seccion.id_seccion === seccion.id_seccion); %> <% if
          (archivosSeccion && archivosSeccion.archivos.length > 0) { %>
          <div class="archivos-subidos">
            <h3>Archivos subidos:</h3>
            <ul>
              <% archivosSeccion.archivos.forEach(archivo => { %>
              <li>
                <%= archivo.nombre_archivo %>
                <button
                  type="button"
                  class="btn-eliminar"
                  onclick="eliminarArchivo(`<%= archivo.id_archivo %>`)"
                >
                  Eliminar
                </button>
              </li>
              <% }) %>
            </ul>
          </div>
          <% } else { %>
          <p>No se han subido archivos aún.</p>
          <% } %>

          <label for="archivo-<%= seccion.id_seccion %>"
            >Subir archivo(s):</label
          >
          <input
            type="file"
            id="archivo-<%= seccion.id_seccion %>"
            name="archivos[<%= seccion.id_seccion %>][]"
            multiple
            accept=".pdf"
            data-id="<%= seccion.id_seccion %>"
            class="input-archivos"
          />

          <div
            id="preview-<%= seccion.id_seccion %>"
            class="archivos-nuevos"
          ></div>
        </div>
        <% }) %>

        <button type="submit">Guardar cambios</button>
      </form>
    </div>

    <script>
      document.querySelectorAll(".input-archivos").forEach((input) => {
        input.addEventListener("change", function () {
          const idSeccion = input.dataset.id
          const previewContainer = document.getElementById(
            "preview-" + idSeccion
          )
          const files = Array.from(input.files)

          // Limpia vista anterior
          previewContainer.innerHTML = ""

          files.forEach((file, index) => {
            const div = document.createElement("div")
            div.classList.add("archivo-preview")

            const span = document.createElement("span")
            span.textContent = file.name

            const btn = document.createElement("button")
            btn.textContent = "X"
            btn.classList.add("btn-eliminar")

            btn.addEventListener("click", () => {
              files.splice(index, 1)

              // Crear nuevo objeto FileList simulando eliminación
              const dt = new DataTransfer()
              files.forEach((f) => dt.items.add(f))
              input.files = dt.files

              // Recargar vista
              input.dispatchEvent(new Event("change"))
            })

            div.appendChild(span)
            div.appendChild(btn)
            previewContainer.appendChild(div)
          })
        })
      })

      function eliminarArchivo(idArchivo) {
        if (!confirm("¿Estás seguro de que deseas eliminar este archivo?"))
          return

        fetch(
          `/user/solicitudes/<%= solicitudId %>/eliminar-archivo/${idArchivo}`,
          {
            method: "POST",
            headers: {
              "Content-Type": "application/json",
            },
          }
        )
          .then((res) => {
            if (!res.ok) throw new Error("Error al eliminar el archivo.")
            location.reload()
          })
          .catch((err) => {
            console.error(err)
            alert("Ocurrió un error al eliminar el archivo.")
          })
      }

      document
        .getElementById("formulario")
        .addEventListener("submit", function (e) {
          const inputs = document.querySelectorAll(".input-archivos")
          let hayArchivos = false
          let archivosInvalidos = false

          inputs.forEach((input) => {
            const files = Array.from(input.files)

            if (files.length > 0) {
              hayArchivos = true

              files.forEach((file) => {
                if (file.type !== "application/pdf") {
                  archivosInvalidos = true
                }
              })
            }
          })

          if (!hayArchivos) {
            e.preventDefault()
            alert(
              "Debes subir al menos un archivo antes de guardar los cambios."
            )
            return
          }

          if (archivosInvalidos) {
            e.preventDefault()
            alert("Solo se permiten archivos PDF.")
            return
          }
        })
    </script>
  </body>
</html>
